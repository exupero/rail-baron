;; Analyzed by ClojureScript 0.0-3195
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name vdom.core, :imports nil, :requires {cljs.core.async cljs.core.async}, :uses {<! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :defs {diff {:meta {:end-column 10, :end-line 5, :column 6, :line 5, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :line 5, :column 1, :end-line 5, :end-column 10, :test true, :name vdom.core/diff}, html-tree {:protocol-inline nil, :meta {:arglists (quote ([[tag attrs & children :as arg]])), :end-column 16, :end-line 28, :column 7, :line 28, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :name vdom.core/html-tree, :variadic false, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :end-column 16, :method-params ([p__38523]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[tag attrs & children :as arg]])), :test true}, svg-node {:protocol-inline nil, :meta {:arglists (quote ([tag attrs children])), :end-column 15, :end-line 20, :column 7, :line 20, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :name vdom.core/svg-node, :variadic false, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :end-column 15, :method-params ([tag attrs children]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tag attrs children])), :test true}, patch {:meta {:end-column 11, :end-line 6, :column 6, :line 6, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :line 6, :column 1, :end-line 6, :end-column 11, :test true, :name vdom.core/patch}, html-node {:protocol-inline nil, :meta {:arglists (quote ([tag attrs children])), :end-column 16, :end-line 17, :column 7, :line 17, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :name vdom.core/html-node, :variadic false, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :end-column 16, :method-params ([tag attrs children]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 3, :fn-var true, :arglists (quote ([tag attrs children])), :test true}, create {:meta {:end-column 12, :end-line 7, :column 6, :line 7, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :line 7, :column 1, :end-line 7, :end-column 12, :test true, :name vdom.core/create}, flatten-children {:protocol-inline nil, :meta {:arglists (quote ([[head & tail]])), :end-column 23, :end-line 9, :column 7, :line 9, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :name vdom.core/flatten-children, :variadic false, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :end-column 23, :method-params ([p__38520]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[head & tail]])), :test true}, svg-tree {:protocol-inline nil, :meta {:arglists (quote ([[tag attrs & children :as arg]])), :end-column 15, :end-line 39, :column 7, :line 39, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :name vdom.core/svg-tree, :variadic false, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :end-column 15, :method-params ([p__38526]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[tag attrs & children :as arg]])), :test true}, text-node {:protocol-inline nil, :meta {:arglists (quote ([s])), :end-column 16, :end-line 23, :column 7, :line 23, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :name vdom.core/text-node, :variadic false, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :end-column 16, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :test true}, renderer {:protocol-inline nil, :meta {:arglists (quote ([elem])), :end-column 15, :end-line 50, :column 7, :line 50, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :name vdom.core/renderer, :variadic false, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :end-column 15, :method-params ([elem]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([elem])), :test true}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:order [:else :svg :foreignObject], :seen #{:else :svg :foreignObject}}, :doc nil}