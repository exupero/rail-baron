;; Analyzed by ClojureScript 0.0-3195
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name vdom.core, :imports nil, :requires {cljs.core.async cljs.core.async}, :uses {<! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :defs {diff {:meta {:end-column 10, :end-line 5, :column 6, :line 5, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :line 5, :column 1, :end-line 5, :end-column 10, :test true, :name vdom.core/diff}, html-tree {:protocol-inline nil, :meta {:arglists (quote ([[tag attrs & children :as arg]])), :end-column 16, :end-line 32, :column 7, :line 32, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :name vdom.core/html-tree, :variadic false, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :end-column 16, :method-params ([p__23948]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[tag attrs & children :as arg]])), :test true}, svg-node {:meta {:end-column 14, :end-line 20, :column 6, :line 20, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :line 20, :column 1, :end-line 20, :end-column 14, :test true, :name vdom.core/svg-node}, patch {:meta {:end-column 11, :end-line 6, :column 6, :line 6, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :line 6, :column 1, :end-line 6, :end-column 11, :test true, :name vdom.core/patch}, html-node {:meta {:end-column 15, :end-line 15, :column 6, :line 15, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :line 15, :column 1, :end-line 15, :end-column 15, :test true, :name vdom.core/html-node}, create {:meta {:end-column 12, :end-line 7, :column 6, :line 7, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :line 7, :column 1, :end-line 7, :end-column 12, :test true, :name vdom.core/create}, flatten-children {:protocol-inline nil, :meta {:arglists (quote ([children])), :end-column 23, :end-line 9, :column 7, :line 9, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :name vdom.core/flatten-children, :variadic false, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :end-column 23, :method-params ([children]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([children])), :test true}, svg-tree {:protocol-inline nil, :meta {:arglists (quote ([[tag attrs & children :as arg]])), :end-column 15, :end-line 43, :column 7, :line 43, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :name vdom.core/svg-tree, :variadic false, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :end-column 15, :method-params ([p__23951]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[tag attrs & children :as arg]])), :test true}, text-node {:meta {:end-column 15, :end-line 25, :column 6, :line 25, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :line 25, :column 1, :end-line 25, :end-column 15, :test true, :name vdom.core/text-node}, renderer {:protocol-inline nil, :meta {:arglists (quote ([elem])), :end-column 15, :end-line 54, :column 7, :line 54, :file "/Users/exupero/code/vdom/src/vdom/core.cljs"}, :name vdom.core/renderer, :variadic false, :file "/Users/exupero/code/vdom/src/vdom/core.cljs", :end-column 15, :method-params ([elem]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([elem])), :test true}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:order [:svg :else :foreignObject], :seen #{:else :svg :foreignObject}}, :doc nil}