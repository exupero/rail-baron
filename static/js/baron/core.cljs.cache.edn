;; Analyzed by ClojureScript 0.0-3195
{:use-macros {match cljs.core.match, go cljs.core.async.macros}, :excludes #{}, :name baron.core, :imports nil, :requires {xhr goog.net.XhrIo, goog.net.XhrIo goog.net.XhrIo, async cljs.core.async, clojure.browser.repl clojure.browser.repl, cljs.core.async cljs.core.async, vdom.elm vdom.elm, cljs.reader cljs.reader, cljs.core.match cljs.core.match, repl clojure.browser.repl, reader cljs.reader}, :uses {close! cljs.core.async, chan cljs.core.async, foldp vdom.elm, render! vdom.elm, put! cljs.core.async}, :defs {step {:protocol-inline nil, :meta {:arglists (quote ([model action])), :end-column 11, :end-line 112, :column 7, :line 112, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :name baron.core/step, :variadic false, :file "src/baron/core.cljs", :end-column 11, :method-params ([model action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 2, :fn-var true, :arglists (quote ([model action])), :test true}, fetch {:protocol-inline nil, :meta {:arglists (quote ([parser path])), :end-column 12, :end-line 17, :column 7, :line 17, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :name baron.core/fetch, :variadic false, :file "src/baron/core.cljs", :end-column 12, :method-params ([parser path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([parser path])), :test true}, projection {:meta {:end-column 16, :end-line 28, :column 6, :line 28, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :file "src/baron/core.cljs", :line 28, :column 1, :end-line 28, :end-column 16, :test true, :name baron.core/projection}, height {:meta {:end-column 12, :end-line 15, :column 6, :line 15, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :file "src/baron/core.cljs", :line 15, :column 1, :end-line 15, :end-column 12, :test true, :name baron.core/height}, ui-selected {:protocol-inline nil, :meta {:arglists (quote ([{:keys [cities payoffs selected]} actions])), :end-column 18, :end-line 60, :column 7, :line 60, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :name baron.core/ui-selected, :variadic false, :file "src/baron/core.cljs", :end-column 18, :method-params ([p__44023 actions]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [cities payoffs selected]} actions])), :test true}, ui-text {:protocol-inline nil, :meta {:arglists (quote ([{:keys [cities selected payoff]} actions])), :end-column 14, :end-line 83, :column 7, :line 83, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :name baron.core/ui-text, :variadic false, :file "src/baron/core.cljs", :end-column 14, :method-params ([p__44058 actions]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [cities selected payoff]} actions])), :test true}, conn {:meta {:end-column 14, :end-line 10, :column 10, :line 10, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :file "src/baron/core.cljs", :line 10, :column 1, :end-line 10, :end-column 14, :test true, :name baron.core/conn}, path {:meta {:end-column 10, :end-line 36, :column 6, :line 36, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :file "src/baron/core.cljs", :line 36, :column 1, :end-line 36, :end-column 10, :test true, :name baron.core/path}, lon-lat {:meta {:end-column 13, :end-line 38, :column 6, :line 38, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :file "src/baron/core.cljs", :line 38, :column 1, :end-line 38, :end-column 13, :test true, :name baron.core/lon-lat}, flip {:protocol-inline nil, :meta {:arglists (quote ([f])), :end-column 11, :end-line 110, :column 7, :line 110, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :name baron.core/flip, :variadic false, :file "src/baron/core.cljs", :end-column 11, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f])), :test true}, ui-cities {:protocol-inline nil, :meta {:arglists (quote ([{:keys [cities]} actions])), :end-column 16, :end-line 52, :column 7, :line 52, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :name baron.core/ui-cities, :variadic false, :file "src/baron/core.cljs", :end-column 16, :method-params ([p__43987 actions]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [cities]} actions])), :test true}, ui-country {:protocol-inline nil, :meta {:arglists (quote ([{:keys [usa]} actions])), :end-column 17, :end-line 42, :column 7, :line 42, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :name baron.core/ui-country, :variadic false, :file "src/baron/core.cljs", :end-column 17, :method-params ([p__43984 actions]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [usa]} actions])), :test true}, width {:meta {:end-column 11, :end-line 14, :column 6, :line 14, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :file "src/baron/core.cljs", :line 14, :column 1, :end-line 14, :end-column 11, :test true, :name baron.core/width}, ui-selected-cities {:protocol-inline nil, :meta {:arglists (quote ([{:keys [cities selected]} actions])), :end-column 25, :end-line 74, :column 7, :line 74, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :name baron.core/ui-selected-cities, :variadic false, :file "src/baron/core.cljs", :end-column 25, :method-params ([p__44030 actions]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [cities selected]} actions])), :test true}, format-money {:meta {:end-column 18, :end-line 40, :column 6, :line 40, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :file "src/baron/core.cljs", :line 40, :column 1, :end-line 40, :end-column 18, :test true, :name baron.core/format-money}, ui {:protocol-inline nil, :meta {:arglists (quote ([actions])), :end-column 9, :end-line 92, :column 7, :line 92, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :name baron.core/ui, :variadic false, :file "src/baron/core.cljs", :end-column 9, :method-params ([actions]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists (quote ([actions])), :test true}, roll {:protocol-inline nil, :meta {:arglists (quote ([n])), :end-column 11, :end-line 106, :column 7, :line 106, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :name baron.core/roll, :variadic false, :file "src/baron/core.cljs", :end-column 11, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n])), :test true}, land-border {:protocol-inline nil, :meta {:arglists (quote ([shape])), :end-column 18, :end-line 25, :column 7, :line 25, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :name baron.core/land-border, :variadic false, :file "src/baron/core.cljs", :end-column 18, :method-params ([shape]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([shape])), :test true}}, :require-macros {cljs.core.match cljs.core.match, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:order [:lon :lat :usa :use :xlink:href :image :clip-path :width :height :clipPath :id :cities :name :g :class :transform :onclick :select :circle :r :selected :payoffs :type :coordinates :text :dy :path :d :deselect :payoff :main :svg :defs :else :no-op :recur], :seen #{:usa :path :deselect :r :coordinates :transform :selected :else :cities :use :name :payoffs :circle :width :onclick :dy :clipPath :recur :type :no-op :clip-path :g :id :class :payoff :lon :defs :xlink:href :svg :lat :image :d :main :height :select :text}}, :doc nil}