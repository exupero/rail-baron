;; Analyzed by ClojureScript 0.0-3195
{:use-macros {match cljs.core.match, go cljs.core.async.macros}, :excludes #{}, :name baron.core, :imports nil, :requires {xhr goog.net.XhrIo, goog.net.XhrIo goog.net.XhrIo, vdom.core vdom.core, async cljs.core.async, clojure.browser.repl clojure.browser.repl, cljs.core.async cljs.core.async, vdom vdom.core, cljs.reader cljs.reader, cljs.core.match cljs.core.match, repl clojure.browser.repl, reader cljs.reader}, :uses {close! cljs.core.async, chan cljs.core.async, put! cljs.core.async}, :defs {main {:protocol-inline nil, :meta {:arglists (quote ([actions])), :end-column 11, :end-line 40, :column 7, :line 40, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :name baron.core/main, :variadic false, :file "src/baron/core.cljs", :end-column 11, :method-params ([actions]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([actions])), :test true}, step {:protocol-inline nil, :meta {:arglists (quote ([model action])), :end-column 11, :end-line 67, :column 7, :line 67, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :name baron.core/step, :variadic false, :file "src/baron/core.cljs", :end-column 11, :method-params ([model action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 2, :fn-var true, :arglists (quote ([model action])), :test true}, fetch {:protocol-inline nil, :meta {:arglists (quote ([parser path])), :end-column 12, :end-line 17, :column 7, :line 17, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :name baron.core/fetch, :variadic false, :file "src/baron/core.cljs", :end-column 12, :method-params ([parser path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([parser path])), :test true}, projection {:meta {:end-column 16, :end-line 30, :column 6, :line 30, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :file "src/baron/core.cljs", :line 30, :column 1, :end-line 30, :end-column 16, :test true, :name baron.core/projection}, height {:meta {:end-column 12, :end-line 15, :column 6, :line 15, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :file "src/baron/core.cljs", :line 15, :column 1, :end-line 15, :end-column 12, :test true, :name baron.core/height}, conn {:meta {:end-column 14, :end-line 10, :column 10, :line 10, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :file "src/baron/core.cljs", :line 10, :column 1, :end-line 10, :end-column 14, :test true, :name baron.core/conn}, path {:meta {:end-column 10, :end-line 38, :column 6, :line 38, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :file "src/baron/core.cljs", :line 38, :column 1, :end-line 38, :end-column 10, :test true, :name baron.core/path}, spy {:protocol-inline nil, :meta {:arglists (quote ([x])), :end-column 10, :end-line 25, :column 7, :line 25, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :name baron.core/spy, :variadic false, :file "src/baron/core.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :test true}, width {:meta {:end-column 11, :end-line 14, :column 6, :line 14, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :file "src/baron/core.cljs", :line 14, :column 1, :end-line 14, :end-column 11, :test true, :name baron.core/width}, roll {:protocol-inline nil, :meta {:arglists (quote ([n])), :end-column 11, :end-line 63, :column 7, :line 63, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :name baron.core/roll, :variadic false, :file "src/baron/core.cljs", :end-column 11, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n])), :test true}, land-border {:protocol-inline nil, :meta {:arglists (quote ([shape])), :end-column 18, :end-line 27, :column 7, :line 27, :file "/Users/exupero/code/rail-baron/src/baron/core.cljs"}, :name baron.core/land-border, :variadic false, :file "src/baron/core.cljs", :end-column 18, :method-params ([shape]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([shape])), :test true}}, :require-macros {cljs.core.match cljs.core.match, cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:order [:selected :cities :usa :main :svg :width :height :defs :path :id :d :clipPath :use :image :clip-path :lon :lat :name :g :transform :onclick :select :circle :r :fill :else :no-op :payoffs :recur], :seen #{:usa :path :r :transform :selected :else :cities :use :name :payoffs :fill :circle :width :onclick :clipPath :recur :no-op :clip-path :g :id :lon :defs :svg :lat :image :d :main :height :select}}, :doc nil}