;; Analyzed by ClojureScript 0.0-3195
{:use-macros {go-loop cljs.core.async.macros}, :excludes #{}, :name vdom.elm, :imports nil, :requires {vdom.core vdom.core, cljs.core.async cljs.core.async}, :uses {<! cljs.core.async, chan cljs.core.async, renderer vdom.core, put! cljs.core.async}, :defs {render! {:protocol-inline nil, :meta {:arglists (quote ([views elem])), :end-column 14, :end-line 21, :column 7, :line 21, :file "/Users/exupero/code/vdom/src/vdom/elm.cljs"}, :name vdom.elm/render!, :variadic false, :file "/Users/exupero/code/vdom/src/vdom/elm.cljs", :end-column 14, :method-params ([views elem]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([views elem])), :test true}, event {:protocol-inline nil, :meta {:arglists (quote ([ch x])), :end-column 12, :end-line 16, :column 7, :line 16, :file "/Users/exupero/code/vdom/src/vdom/elm.cljs"}, :name vdom.elm/event, :variadic false, :file "/Users/exupero/code/vdom/src/vdom/elm.cljs", :end-column 12, :method-params ([ch x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ch x])), :test true}, foldp {:protocol-inline nil, :meta {:arglists (quote ([f init in])), :end-column 12, :end-line 6, :column 7, :line 6, :file "/Users/exupero/code/vdom/src/vdom/elm.cljs"}, :name vdom.elm/foldp, :variadic false, :file "/Users/exupero/code/vdom/src/vdom/elm.cljs", :end-column 12, :method-params ([f init in]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 3, :fn-var true, :arglists (quote ([f init in])), :test true}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:order [:recur :else], :seen #{:else :recur}}, :doc nil}